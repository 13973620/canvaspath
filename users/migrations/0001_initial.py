# Generated by Django 2.1.7 on 2019-04-21 05:22

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('age', models.IntegerField(null=True)),
                ('gender', models.CharField(max_length=1, null=True)),
                ('role', models.CharField(choices=[('SU', 'Super User'), ('S', 'Student'), ('P', 'Professor')], default='S', max_length=2)),
                ('major', models.TextField(null=True)),
                ('street', models.TextField(null=True)),
                ('zipcode', models.TextField(null=True)),
                ('office_address', models.TextField(null=True)),
                ('title', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Capstone_grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Capstone_section',
            fields=[
                ('sec_no', models.IntegerField(primary_key=True, serialize=False)),
                ('project_no', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Capstone_Team',
            fields=[
                ('capstone_team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('project_no', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Capstone_Team_Members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capstone_team_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Capstone_Team')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.TextField()),
                ('course_description', models.TextField(null=True)),
                ('grade', models.CharField(max_length=5, null=True)),
                ('course_prof', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('dept_id', models.AutoField(primary_key=True, serialize=False)),
                ('dept_name', models.CharField(max_length=20, null=True, unique=True)),
                ('dept_detail', models.CharField(max_length=50, null=True)),
                ('dept_head', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enrolls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Exam_grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=5)),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Exams',
            fields=[
                ('exam_no', models.IntegerField(primary_key=True, serialize=False)),
                ('exam_details', models.TextField(null=True)),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('hw_no', models.IntegerField(primary_key=True, serialize=False)),
                ('hw_details', models.TextField(null=True)),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Homework_grades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hw_details', models.TextField(null=True)),
                ('grade', models.CharField(max_length=5)),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course')),
                ('student_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
        ),
        migrations.CreateModel(
            name='Prof_team_members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_team_id', models.IntegerField(default=0)),
                ('prof_email', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email')),
            ],
        ),
        migrations.CreateModel(
            name='Prof_teams',
            fields=[
                ('teaching_team_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('sec_no', models.AutoField(primary_key=True, serialize=False)),
                ('sec_no2', models.CharField(max_length=10, null=True)),
                ('section_type', models.CharField(choices=[(0, 'regular'), (1, 'capstone')], max_length=10)),
                ('limit', models.IntegerField(default=10)),
            ],
        ),
        migrations.AddField(
            model_name='homework',
            name='sec_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Sections'),
        ),
        migrations.AddField(
            model_name='exams',
            name='sec_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Sections'),
        ),
        migrations.AddField(
            model_name='exam_grades',
            name='exam_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Exams'),
        ),
        migrations.AddField(
            model_name='exam_grades',
            name='student_email',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email'),
        ),
        migrations.AddField(
            model_name='enrolls',
            name='section_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Sections'),
        ),
        migrations.AddField(
            model_name='enrolls',
            name='student_email',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='email'),
        ),
        migrations.AddField(
            model_name='course',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Sections'),
        ),
        migrations.AddField(
            model_name='capstone_team_members',
            name='course_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course'),
        ),
        migrations.AddField(
            model_name='capstone_team_members',
            name='sec_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Capstone_section'),
        ),
        migrations.AddField(
            model_name='capstone_team_members',
            name='student_email',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email'),
        ),
        migrations.AddField(
            model_name='capstone_team',
            name='course_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course'),
        ),
        migrations.AddField(
            model_name='capstone_team',
            name='sec_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Capstone_section'),
        ),
        migrations.AddField(
            model_name='capstone_section',
            name='course_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course'),
        ),
        migrations.AddField(
            model_name='capstone_section',
            name='sponsor_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, to_field='email'),
        ),
        migrations.AddField(
            model_name='capstone_grades',
            name='course_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Course'),
        ),
        migrations.AddField(
            model_name='capstone_grades',
            name='sec_no',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Capstone_section'),
        ),
        migrations.AddField(
            model_name='capstone_grades',
            name='team_id',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Capstone_Team'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Department', to_field='dept_name'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AlterUniqueTogether(
            name='homework_grades',
            unique_together={('course_id', 'student_email')},
        ),
        migrations.AlterUniqueTogether(
            name='exam_grades',
            unique_together={('exam_no', 'student_email', 'course_id')},
        ),
        migrations.AlterUniqueTogether(
            name='enrolls',
            unique_together={('course_id', 'student_email')},
        ),
        migrations.AlterUniqueTogether(
            name='capstone_grades',
            unique_together={('sec_no', 'team_id')},
        ),
    ]
